stages:
#  - test
  - build
  - push
<<<<<<< HEAD
  - deploy
=======
#  - deploy
#  - ping-gitlab
>>>>>>> a890d1c8837f78b79fe76f16ae1fc3bc849bb389

variables:
  PROJECT_NAME: application
  DOCKER_REGISTRY: localhost:5050
  IMAGE_TAG: "$DOCKER_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA"

#default:
#  image: docker.arvancloud.ir/docker:latest
#  services: []
#  before_script:
#    - echo "default"
    #- docker info

## --- Stage 1: Test ---
#test:
#  stage: test
#  script:
#    - echo "Running health check..."
#    - docker-compose -f docker-compose.yml up -d database
#    - sleep 10
#    - curl --fail http://localhost:5000/health || (echo "Health check failed" && exit 1)
#  tags: [production-like]
#

build:
  stage: build
  script:
    - docker build -t $IMAGE_TAG app
  tags: [production-like]

push:
  stage: push
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $DOCKER_REGISTRY
    - docker push $IMAGE_TAG
  tags: [production-like]
  after_script:
    - echo "Cleaning up local Docker image..."
    - docker rmi $IMAGE_TAG || true
  tags: [production-like]
  only:
    - main
<<<<<<< HEAD

deploy:
  stage: deploy
  script:
    - echo "Deploying to production..."
    - echo "APP_IMAGE=$IMAGE_TAG" > .env
    - docker pull $IMAGE_TAG
    - docker compose  up -d application database
  tags: [production-like]
  only:
    - main
=======
#
## --- Stage 4: Deploy ---
#deploy:
#  stage: deploy
#  script:
#    - echo "Deploying to production..."
#    - docker pull $IMAGE_TAG
#    - docker-compose -f docker-compose.yml up -d
#  tags: [production-like]
#  only:
#    - main
#
>>>>>>> a890d1c8837f78b79fe76f16ae1fc3bc849bb389
