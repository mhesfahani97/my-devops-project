---
services:
############################################### Application #################################################
  application:
    image: "${APP_IMAGE}"
    container_name: application
    hostname: application
    restart: always
    volumes:
      - /etc/timezone:/etc/timezone:ro
    environment:
      MONGO_URI: "${MONGO_URI}"
    ports:
      - "5000:5000"
    depends_on:
      - database
    networks:
      - app-db
################################################# Database #################################################
  database:
    image: docker.arvancloud.ir/mongo:6.0
    container_name: database
    hostname: database
    restart: always
    volumes:
      - mongo_data:/data/db
      - mongo_log:/var/log/mongodb/
      - ./mongo-entrypoint/:/docker-entrypoint-initdb.d/
      - /etc/timezone:/etc/timezone:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      MONGO_INITDB_DB: appdb
    expose:
      - "27017:27017"
    networks:
      - app-db
################################################# GitLab #################################################
  gitlab:
    image: docker.arvancloud.ir/gitlab/gitlab-ce:17.11.0-ce.0
    container_name: gitlab
    hostname: gitlab
    restart: always
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost:80'
        nginx['redirect_http_to_https'] = false
        gitlab_rails['time_zone'] = 'Tehran'
        registry_external_url 'http://localhost:5050'
        registry_nginx['redirect_http_to_https'] = false
    ports:
      - '80:80'
      - '22:22'
      - '5050:5050'
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
      - gitlab_secret:/secret/gitlab/backups
      - /etc/timezone:/etc/timezone:ro
    mem_limit: 8g
    cpus: 4.0
    networks:
      - gitlab
################################################# Runner #################################################
  runner:
    image: docker.arvancloud.ir/gitlab/gitlab-runner:v17.11.0
    container_name: runner
    hostname: runner
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./runner-config/config.toml:/etc/gitlab-runner/config.toml
      - /etc/timezone:/etc/timezone:ro
    network_mode: 'host'
################################################# Grafana #################################################
  grafana:
    image: docker.arvancloud.ir/grafana/grafana:11.6.1
    container_name: grafana
    hostname: grafana
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - grafana
################################################# Prometheus #################################################
  prometheus:
    image: prom/prometheus:v3.4.1
    restart: always
    container_name: prometeheus
    hostname: prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus:/etc/prometheus
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      - mongo-exporter
    ports:
      - "9090:9090"
    networks:
      - app-db
      - grafana
################################################# Mongo Exporter #################################################
  mongo-exporter:
      image: percona/mongodb_exporter:0.44.0
      container_name: mongo-exporter
      hostname: mongo-exporter
      volumes:
        - /etc/timezone:/etc/timezone:ro
      environment:
        MONGODB_URI: mongodb://exporter:exporter@database:27017
      command: ["--collect-all", "--compatible-mode", "--discovering-mode"]
      expose:
      - "9216:9216"
      networks:
        - app-db
          ################################################## ElasticSearch #################################################
          #  elasticsearch:
          #    image: docker.arvancloud.ir/elasticsearch:7.9.1
          #    container_name: elasticsearch
          #    hostname: elasticsearch
          #    restart: always
          #    ports:
          #      - "9200:9200"
          #      - "9300:9300"
          #    volumes:
          #      - test-data:/usr/share/elasticsearch/data/
          #      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
          #      - /etc/timezone:/etc/timezone:ro
          #    environment:
          #      - discovery.type=single-node
          #      - http.host=0.0.0.0
          #      - transport.host=0.0.0.0
          #      - xpack.security.enabled=false
          #      - xpack.monitoring.enabled=false
          #      - cluster.name=elasticsearch
          #      - bootstrap.memory_lock=true
          #    networks:
          #      - elk
          ################################################## LogStash #################################################
          #  logstash:
          #    image: docker.arvancloud.ir/logstash:7.9.1
          #    container_name: logstash
          #    hostname: logstash
          #    restart: always
          #    expose:
          #      - "5000"
          #    volumes:
          #      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
          #      - ls_data:/usr/share/logstash/data
          #      - /etc/timezone:/etc/timezone:ro
          #    depends_on:
          #      - elasticsearch
          #    networks:
          #      - app-db
          ################################################## Kibana #################################################
          #  kibana:
          #    image: docker.arvancloud.ir/kibana:7.9.1
          #    container_name: kibana
          #    hostname: kibana
          #    restart: always
          #    ports:
          #      - "5601:5601"
          #    volumes:
          #      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
          #      - kb-data:/usr/share/kibana/data
          #      - /etc/timezone:/etc/timezone:ro
          #    networks:
          #      - elk
          #    depends_on:
          #      - elasticsearch

networks:
  app-db:
    name: app-db
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: app-db
  gitlab:
    name: gitlab
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: gitlab
  grafana:
    name: grafana
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: grafana

volumes:
  mongo_data:
    name: mongo_data
  mongo_log:
    name: mongo_log
  gitlab_config:
    name: gitlab_config
  gitlab_logs:
    name: gitlab_logs
  gitlab_data:
    name: gitlab_data
  gitlab_secret:
    name: gitlab_secret
  runner_data:
    name: runner_data
  grafana_data:
    name: grafana_data
  prometheus_data:
    name: prometheus_data
  logstash_data:
    name: logstash_data
