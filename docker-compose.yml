---
services:
############################################## Application #################################################
  application:
    image: "${APP_IMAGE}"
    container_name: application
    hostname: application
    restart: always
    mem_limit: 512m
    cpus: 0.5
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "30"
    volumes:
      - /etc/timezone:/etc/timezone:ro
    environment:
      MONGO_URI: "${MONGO_URI}"
    ports:
      - "5000:5000"
    depends_on:
      - database
    networks:
      - frontend
      - backend
################################################# Database #################################################
  database:
    image: docker.arvancloud.ir/mongo:6.0
    container_name: database
    hostname: database
    restart: always
    mem_limit: 1g
    cpus: 1.0
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "30"
    volumes:
      - mongo_data:/data/db
      - mongo_log:/var/log/mongodb/
      - ./mongo-entrypoint/:/docker-entrypoint-initdb.d/
      - /etc/timezone:/etc/timezone:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      MONGO_INITDB_DB: appdb
    expose:
      - "27017:27017"
    networks:
      - backend
################################################# GitLab #################################################
  gitlab:
    image: docker.arvancloud.ir/gitlab/gitlab-ce:17.11.0-ce.0
    container_name: gitlab
    hostname: gitlab
    restart: always
    mem_limit: 8g
    cpus: 4.0
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "30"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost:80'
        nginx['redirect_http_to_https'] = false
        gitlab_rails['time_zone'] = 'Tehran'
        registry_external_url 'http://localhost:5050'
        registry_nginx['redirect_http_to_https'] = false
    ports:
      - '80:80'
      - '22:22'
      - '5050:5050'
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
      - gitlab_secret:/secret/gitlab/backups
      - /etc/timezone:/etc/timezone:ro
    networks:
      - ci
################################################# Runner #################################################
  runner:
    image: docker.arvancloud.ir/gitlab/gitlab-runner:v17.11.0
    container_name: runner
    hostname: runner
    restart: always
    mem_limit: 512m
    cpus: 0.5
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "30"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./runner-config/config.toml:/etc/gitlab-runner/config.toml
      - /etc/timezone:/etc/timezone:ro
    network_mode: 'host'
################################################# Grafana #################################################
  grafana:
    image: docker.arvancloud.ir/grafana/grafana:11.6.1
    container_name: grafana
    hostname: grafana
    restart: always
    mem_limit: 256m
    cpus: 0.2
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "30"
    volumes:
      - grafana_data:/var/lib/grafana
      - /etc/timezone:/etc/timezone:ro
    ports:
      - "3000:3000"
    networks:
      - monitoring
################################################# Prometheus #################################################
  prometheus:
    image: docker.arvancloud.ir/prom/prometheus:v3.4.1
    container_name: prometeheus
    hostname: prometheus
    restart: always
    mem_limit: 512m
    cpus: 0.5
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "30"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus:/etc/prometheus
      - /etc/timezone:/etc/timezone:ro
    ports:
      - "9090:9090"
    networks:
      - monitoring
      - frontend
################################################# Mongo Exporter #################################################
  mongo-exporter:
    image: docker.arvancloud.ir/percona/mongodb_exporter:0.44.0
    container_name: mongo-exporter
    hostname: mongo-exporter
    restart: always
    mem_limit: 128m
    cpus: 0.1
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "30"
    volumes:
      - /etc/timezone:/etc/timezone:ro
    environment:
      MONGODB_URI: mongodb://exporter:exporter@database:27017
    command: ["--collect-all", "--compatible-mode", "--discovering-mode"]
    expose:
    - "9216:9216"
    networks:
      - backend
      - monitoring
################################################# ElasticSearch #################################################
  elasticsearch:
    image: docker.arvancloud.ir/elasticsearch:7.9.1
    container_name: elasticsearch
    hostname: elasticsearch
    restart: always
    mem_limit: 2g
    cpus: 2.0
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "30"
    expose:
      - "9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data/
      - /etc/timezone:/etc/timezone:ro
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
    networks:
      - monitoring
################################################# LogStash #################################################
  logstash:
    image: docker.arvancloud.ir/logstash:7.9.1
    container_name: logstash
    hostname: logstash
    restart: always
    mem_limit: 1g
    cpus: 1.0
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "30"
    expose:
      - "5000"
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ls_data:/usr/share/logstash/data
      - /etc/timezone:/etc/timezone:ro
    networks:
      - frontend
      - monitoring
################################################# Kibana #################################################
  kibana:
    image: docker.arvancloud.ir/kibana:7.9.1
    container_name: kibana
    hostname: kibana
    restart: always
    mem_limit: 512m
    cpus: 0.5
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "30"
    ports:
      - "5601:5601"
    volumes:
      - kb_data:/usr/share/kibana/data
      - /etc/timezone:/etc/timezone:ro
    environment:
      - SERVER_NAME=kibana
      - SERVER_HOST=0.0.0.0
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
    networks:
      - monitoring

networks:
  frontend:
    name: frontend
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: frontend

  backend:
    name: backend
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: backend

  monitoring:
    name: monitoring
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: monitoring

  ci:
    name: ci
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: ci


volumes:
  mongo_data:
    name: mongo_data
  mongo_log:
    name: mongo_log
  gitlab_config:
    name: gitlab_config
  gitlab_logs:
    name: gitlab_logs
  gitlab_data:
    name: gitlab_data
  gitlab_secret:
    name: gitlab_secret
  runner_data:
    name: runner_data
  grafana_data:
    name: grafana_data
  prometheus_data:
    name: prometheus_data
  ls_data:
    name: ls_data
  es_data:
    name: es_data
  kb_data:
    name: kb_data
